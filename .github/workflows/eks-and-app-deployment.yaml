name: INFRASTRUCTURE AND APPLICATION DEPLOYMENT

on:
  push:
    branches: [main]
    paths:
      - 'eksinfra/**'
      - '.github/workflows/eks-and-app-deployment.yaml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-2
  EKS_CLUSTER_NAME: online-boutique-eks
  AWS_ROLE_TO_ASSUME: arn:aws:iam::048058681621:role/github-actions-eks-admin

jobs:
  infrastructure-deployment:
    runs-on: ubuntu-latest
    outputs:
      terraform_action: ${{ steps.determine-action.outputs.terraform_action }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Determine Terraform Action
        id: determine-action
        working-directory: eksinfra
        run: |
          chmod +x script/action.sh
          ./script/action.sh

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0

      - name: Apply or Destroy Infrastructure
        working-directory: eksinfra
        run: |
          chmod +x script/terraform_action.sh
          ./script/terraform_action.sh ${{ steps.determine-action.outputs.terraform_action }}

  application-deployment:
    runs-on: ubuntu-latest
    needs: infrastructure-deployment
    if: needs.infrastructure-deployment.outputs.terraform_action == 'apply'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.33.0"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy ArgoCD Application
        run: kubectl apply -f argocd/application.yaml
